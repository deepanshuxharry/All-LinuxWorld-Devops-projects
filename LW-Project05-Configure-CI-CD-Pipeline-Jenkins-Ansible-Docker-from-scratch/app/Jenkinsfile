pipeline {
    agent any

    environment {
        IMAGE_NAME = 'flask-hostinfo-app'
        CONTAINER_NAME = 'flask-hostinfo-app'
        CONTAINER_PORT = '5000'
        BUILD_TAG = "v-${BUILD_NUMBER}"
        REGISTRY_URL = "172.17.0.6:5000" // get the ip and port
        ANSIBLE_MASTER_IP = "172.17.0.4"  // get the ip
        JENKINS_AGENT_IMAGE_BUILDER_IP = "172.17.0.3" // get the ip
        
    }

    // Jenkins master will pull the source code into Jenkins master itself
    stages {

        stage('Clear Workspace') {
            steps {
                cleanWs()
            }
        }


        stage('Checkout SCM') {
            steps {
                git credentialsId: 'github-credentials-id',
                branch: 'main',
                url: 'https://github.com/Sayantan2k24/LW-Project05-Configure-CI-CD-Pipeline-Jenkins-Ansible-Docker-from-scratch.git'
            }
        }
        
        
        // jenkins will send the necessary files i.e app code and dockerfile to Image Builder Jenkins Agent node Node
        stage('Send App Code to Image Builder Agent') {
            steps {
                sshagent(credentials: ['ssh-to-image-builder']) {
                    sh """
                    scp -o StrictHostKeyChecking=no -r ${WORKSPACE}/app jenkinsAgent@${JENKINS_AGENT_IMAGE_BUILDER_IP}:/home/jenkinsAgent/
                    """
                    // finally app code will be in /home/jenkinsAgent/app/
                }
            }
        }

        
        stage('Build Docker Image') {
            agent { label 'jenkins-agent-image-builder' }
            steps {

                // the script will get executed in the agent node locally.
                sh """
                  cd /home/jenkinsAgent/app
                  docker build -t ${REGISTRY_URL}/${IMAGE_NAME}:${BUILD_TAG} .
                """
            }
        }

        stage('Push to Registry') {
            agent { label 'jenkins-agent-image-builder' }
            steps {
                sh """
                  docker push ${REGISTRY_URL}/${IMAGE_NAME}:${BUILD_TAG}
                  docker rmi ${REGISTRY_URL}/${IMAGE_NAME}:${BUILD_TAG}
                """
            }
        }

        stage('Copy Playbook to Ansible Master') {
            steps {
                sshagent(credentials: ['ssh-to-ansible-master']) {
                    sh """
                    scp -o StrictHostKeyChecking=no -r  ${WORKSPACE}/Ansible_WS ansible@${ANSIBLE_MASTER_IP}:/home/ansible/
                    """
                }
            }
        }

        stage('Deploy using Ansible') {
            agent any
            steps {
                sshagent(credentials: ['ssh-to-ansible-master']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ansible@${ANSIBLE_MASTER_IP} '
                        cd /home/ansible/Ansible_WS &&
                        ansible-playbook -i inventory deploy.yml \
                        --extra-vars "container_name=${CONTAINER_NAME} image_name=${IMAGE_NAME} image_tag=${BUILD_TAG} registry_url=${REGISTRY_URL} container_port=${CONTAINER_PORT}"
                    '
                    """
                }
            }
        }

    }
}


